{
  "component": "OPERATION",
  "id": "SITE_CARD_PARAMS",
  "defCommandId": "applyCard",
  "cacheable": true,
  "groups": [
    {
      "component": "NONE",
      "visible": true,
      "disabled": false,
      "elements": [
        {
          "component": "baseEntry",
          "type": "default",
          "id": "appSequence",
          "alias": "appSequence",
          "visible": true,
          "required": false,
          "logInfo": "appSequence",
          "placeholder": "appSequence",
          "value": "",
          "minLength": "1",
          "maxLength": "12",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на значение параметра",
                "specific": {
                  "pattern": "^[.\\-\\d 0-9a-zA-Z]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "TypeSign",
          "alias": "TypeSign",
          "visible": true,
          "required": false,
          "logInfo": "TypeSign",
          "placeholder": "TypeSign",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на значение параметра",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "typeCard",
          "alias": "typeCard",
          "visible": true,
          "required": true,
          "logInfo": "typeCard",
          "placeholder": "typeCard",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на значение параметра",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "branchCode",
          "alias": "branchCode",
          "visible": true,
          "required": true,
          "logInfo": "branchCode",
          "placeholder": "branchCode",
          "value": "",
          "minLength": "3",
          "maxLength": "3",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на значение параметра",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "deliveryID",
          "alias": "deliveryID",
          "visible": true,
          "required": false,
          "logInfo": "deliveryID",
          "placeholder": "deliveryID",
          "value": "",
          "minLength": "1",
          "maxLength": "40",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на значение параметра",
                "specific": {
                  "pattern": "^[.\\-\\d 0-9a-zA-Z]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "surname",
          "alias": "surname",
          "visible": true,
          "required": true,
          "logInfo": "surname",
          "placeholder": "surname",
          "value": "",
          "minLength": "1",
          "maxLength": "40",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[а-яёА-ЯЁ]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "name",
          "alias": "name",
          "visible": true,
          "required": true,
          "logInfo": "name",
          "placeholder": "name",
          "value": "",
          "minLength": "1",
          "maxLength": "40",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[а-яёА-ЯЁ]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "patronymic",
          "alias": "patronymic",
          "visible": true,
          "required": false,
          "logInfo": "patronymic",
          "placeholder": "patronymic",
          "value": "",
          "minLength": "1",
          "maxLength": "40",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[а-яёА-ЯЁ]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "latinClientName",
          "alias": "latinClientName",
          "visible": true,
          "required": false,
          "logInfo": "latinClientName",
          "placeholder": "latinClientName",
          "value": "",
          "minLength": "1",
          "maxLength": "19",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[.\\-\\d 0-9a-zA-Z]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "sexCode",
          "alias": "sexCode",
          "visible": true,
          "required": true,
          "logInfo": "sexCode",
          "placeholder": "sexCode",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "snils",
          "alias": "snils",
          "visible": true,
          "required": false,
          "logInfo": "snils",
          "placeholder": "snils",
          "value": "",
          "minLength": "14",
          "maxLength": "14",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^\\d{3}-\\d{3}-\\d{3} \\d{2}$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "dateEntry",
          "type": "manual",
          "id": "birthDate",
          "placeholder": "birthDate",
          "required": true,
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "birthPlace",
          "alias": "birthPlace",
          "visible": true,
          "required": true,
          "logInfo": "birthPlace",
          "placeholder": "birthPlace",
          "value": "",
          "minLength": "1",
          "maxLength": "80",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "birthCountryCode",
          "alias": "birthCountryCode",
          "visible": true,
          "required": true,
          "logInfo": "birthCountryCode",
          "placeholder": "birthCountryCode",
          "value": "",
          "minLength": "1",
          "maxLength": "3",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[0-9]+$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "docTypeCode",
          "alias": "docTypeCode",
          "visible": true,
          "required": true,
          "logInfo": "docTypeCode",
          "placeholder": "docTypeCode",
          "value": "",
          "minLength": "2",
          "maxLength": "2",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[1-2]+$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "docSeries",
          "alias": "docSeries",
          "visible": true,
          "required": true,
          "logInfo": "docSeries",
          "placeholder": "docSeries",
          "value": "",
          "minLength": "4",
          "maxLength": "4",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[0-9]+$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "docNum",
          "alias": "docNum",
          "visible": true,
          "required": true,
          "logInfo": "docNum",
          "placeholder": "docNum",
          "value": "",
          "minLength": "6",
          "maxLength": "6",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[0-9]+$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "dateEntry",
          "type": "manual",
          "id": "issueDate",
          "placeholder": "issueDate",
          "required": true,
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "issuedBy",
          "alias": "issuedBy",
          "visible": true,
          "required": true,
          "logInfo": "issuedBy",
          "placeholder": "issuedBy",
          "value": "",
          "minLength": "1",
          "maxLength": "200",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[^a-zA-MO-Z]{1,500}$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "departCode",
          "alias": "departCode",
          "visible": true,
          "required": true,
          "logInfo": "departCode",
          "placeholder": "departCode",
          "value": "",
          "minLength": "7",
          "maxLength": "7",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "\\b\\d{3}[-]\\b\\d{3}$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgCountryCode",
          "alias": "rgCountryCode",
          "visible": true,
          "required": true,
          "logInfo": "rgCountryCode",
          "placeholder": "rgCountryCode",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[.\\-\\d 0-9a-zA-Z]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgPostalCode",
          "alias": "rgPostalCode",
          "visible": true,
          "required": true,
          "logInfo": "rgPostalCode",
          "placeholder": "rgPostalCode",
          "value": "",
          "minLength": "6",
          "maxLength": "6",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgRegionCode",
          "alias": "rgRegionCode",
          "visible": true,
          "required": true,
          "logInfo": "rgRegionCode",
          "placeholder": "rgRegionCode",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgDistrict",
          "alias": "rgDistrict",
          "visible": true,
          "required": false,
          "logInfo": "rgDistrict",
          "placeholder": "rgDistrict",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgCity",
          "alias": "rgCity",
          "visible": true,
          "required": false,
          "logInfo": "rgCity",
          "placeholder": "rgCity",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgLocality",
          "alias": "rgLocality",
          "visible": true,
          "required": false,
          "logInfo": "rgLocality",
          "placeholder": "rgLocality",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgStreet",
          "alias": "rgStreet",
          "visible": true,
          "required": false,
          "logInfo": "rgStreet",
          "placeholder": "rgStreet",
          "value": "",
          "minLength": "1",
          "maxLength": "80",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgHouse",
          "alias": "rgHouse",
          "visible": true,
          "required": false,
          "logInfo": "rgHouse",
          "placeholder": "rgHouse",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgHousing",
          "alias": "rgHousing",
          "visible": true,
          "required": false,
          "logInfo": "rgHousing",
          "placeholder": "rgHousing",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgBuilding",
          "alias": "rgBuilding",
          "visible": true,
          "required": false,
          "logInfo": "rgBuilding",
          "placeholder": "rgBuilding",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "rgFlat",
          "alias": "rgFlat",
          "visible": true,
          "required": false,
          "logInfo": "rgFlat",
          "placeholder": "rgFlat",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftCountryCode",
          "alias": "ftCountryCode",
          "visible": true,
          "required": true,
          "logInfo": "ftCountryCode",
          "placeholder": "ftCountryCode",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[.\\-\\d 0-9a-zA-Z]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftPostalCode",
          "alias": "ftPostalCode",
          "visible": true,
          "required": true,
          "logInfo": "ftPostalCode",
          "placeholder": "ftPostalCode",
          "value": "",
          "minLength": "6",
          "maxLength": "6",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftRegionCode",
          "alias": "ftRegionCode",
          "visible": true,
          "required": true,
          "logInfo": "ftRegionCode",
          "placeholder": "ftRegionCode",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftDistrict",
          "alias": "ftDistrict",
          "visible": true,
          "required": false,
          "logInfo": "ftDistrict",
          "placeholder": "ftDistrict",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftCity",
          "alias": "ftCity",
          "visible": true,
          "required": false,
          "logInfo": "ftCity",
          "placeholder": "ftCity",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftLocality",
          "alias": "ftLocality",
          "visible": true,
          "required": false,
          "logInfo": "ftLocality",
          "placeholder": "ftLocality",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftStreet",
          "alias": "ftStreet",
          "visible": true,
          "required": false,
          "logInfo": "ftStreet",
          "placeholder": "ftStreet",
          "value": "",
          "minLength": "1",
          "maxLength": "80",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftHouse",
          "alias": "ftHouse",
          "visible": true,
          "required": false,
          "logInfo": "ftHouse",
          "placeholder": "ftHouse",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftHousing",
          "alias": "ftHousing",
          "visible": true,
          "required": false,
          "logInfo": "ftHousing",
          "placeholder": "ftHousing",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftBuilding",
          "alias": "ftBuilding",
          "visible": true,
          "required": false,
          "logInfo": "ftBuilding",
          "placeholder": "ftBuilding",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ftFlat",
          "alias": "ftFlat",
          "visible": true,
          "required": false,
          "logInfo": "ftFlat",
          "placeholder": "ftFlat",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlCountryCode",
          "alias": "dlCountryCode",
          "visible": true,
          "required": false,
          "logInfo": "dlCountryCode",
          "placeholder": "dlCountryCode",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^[.\\-\\d 0-9a-zA-Z]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlPostalCode",
          "alias": "dlPostalCode",
          "visible": true,
          "required": false,
          "logInfo": "dlPostalCode",
          "placeholder": "dlPostalCode",
          "value": "",
          "minLength": "6",
          "maxLength": "6",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlRegionCode",
          "alias": "dlRegionCode",
          "visible": true,
          "required": false,
          "logInfo": "dlRegionCode",
          "placeholder": "dlRegionCode",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlDistrict",
          "alias": "dlDistrict",
          "visible": true,
          "required": false,
          "logInfo": "dlDistrict",
          "placeholder": "dlDistrict",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlCity",
          "alias": "dlCity",
          "visible": true,
          "required": false,
          "logInfo": "dlCity",
          "placeholder": "dlCity",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlLocality",
          "alias": "dlLocality",
          "visible": true,
          "required": false,
          "logInfo": "dlLocality",
          "placeholder": "dlLocality",
          "value": "",
          "minLength": "1",
          "maxLength": "60",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlStreet",
          "alias": "dlStreet",
          "visible": true,
          "required": false,
          "logInfo": "dlStreet",
          "placeholder": "dlStreet",
          "value": "",
          "minLength": "1",
          "maxLength": "80",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlHouse",
          "alias": "dlHouse",
          "visible": true,
          "required": false,
          "logInfo": "dlHouse",
          "placeholder": "dlHouse",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlHousing",
          "alias": "dlHousing",
          "visible": true,
          "required": false,
          "logInfo": "dlHousing",
          "placeholder": "dlHousing",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlBuilding",
          "alias": "dlBuilding",
          "visible": true,
          "required": false,
          "logInfo": "dlBuilding",
          "placeholder": "dlBuilding",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "dlFlat",
          "alias": "dlFlat",
          "visible": true,
          "required": false,
          "logInfo": "dlFlat",
          "placeholder": "dlFlat",
          "value": "",
          "minLength": "1",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,\\/№N_\" ()]+[-–]+)*[а-яА-ЯёЁ0-9.,\\/№N_\" ()]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "mobileNumber",
          "alias": "mobileNumber",
          "visible": true,
          "required": true,
          "logInfo": "mobileNumber",
          "placeholder": "mobileNumber",
          "value": "",
          "minLength": "1",
          "maxLength": "12",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "logInfo": "Контроль на цифры",
                "specific": {
                  "pattern": "(8|\\+7|7)[0-9]{10}"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },

        {
          "component": "baseEntry",
          "type": "email",
          "id": "email",
          "alias": "email",
          "visible": true,
          "required": false,
          "logInfo": "email",
          "placeholder": "email",
          "value": "",
          "minLength": "1",
          "maxLength": "90",
          "errors": [
            {
              "type": "validator",
              "message": "Параметр указан неверно"
            }
          ]
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsentPersonalData",
          "alias": "ConsentPersonalData",
          "visible": true,
          "required": true,
          "placeholder": "ConsentPersonalData",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },

        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsentPersonalDataSharing",
          "alias": "ConsentPersonalDataSharing",
          "visible": true,
          "required": true,
          "placeholder": "ConsentPersonalDataSharing",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },

        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsentCHCheck",
          "alias": "ConsentCHCheck",
          "visible": true,
          "required": true,
          "placeholder": "ConsentCHCheck",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        }
      ,

        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsentAdvSubscription",
          "alias": "ConsentAdvSubscription",
          "visible": true,
          "required": true,
          "placeholder": "ConsentAdvSubscription",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "consentVoiceBiometrics",
          "alias": "consentVoiceBiometrics",
          "visible": true,
          "required": false,
          "placeholder": "consentVoiceBiometrics",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsentPersonalDataPartner",
          "alias": "ConsentPersonalDataPartner",
          "visible": true,
          "required": false,
          "placeholder": "ConsentPersonalDataPartner",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsentDigSingCondit",
          "alias": "ConsentDigSingCondit",
          "visible": true,
          "required": false,
          "placeholder": "ConsentDigSingCondit",
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsDigSingConditDate",
          "alias": "ConsDigSingConditDate",
          "visible": true,
          "required": false,
          "placeholder": "ConsDigSingConditDate",
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsentCashbackGF",
          "alias": "ConsentCashbackGF",
          "visible": true,
          "required": false,
          "placeholder": "ConsentCashbackGF",
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsCashbackGFDate",
          "alias": "ConsCashbackGFDate",
          "visible": true,
          "required": false,
          "placeholder": "ConsCashbackGFDate",
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsentPremiumUP",
          "alias": "ConsentPremiumUP",
          "visible": true,
          "required": false,
          "placeholder": "ConsentPremiumUP",
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "[10]"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "ConsPremiumUPDate",
          "alias": "ConsPremiumUPDate",
          "visible": true,
          "required": false,
          "placeholder": "ConsPremiumUPDate",
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "consentIp_address",
          "alias": "consentIp_address",
          "visible": true,
          "required": false,
          "placeholder": "consentIp_address",
          "value": "",
          "minLength": "1",
          "maxLength": "20",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "dateEntry",
          "type": "manual",
          "id": "consentSend_time",
          "placeholder": "consentSend_time",
          "required": false,
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "consentSend_smsid",
          "alias": "consentSend_smsid",
          "visible": true,
          "required": false,
          "placeholder": "consentSend_smsid",
          "value": "",
          "minLength": "1",
          "maxLength": "20",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "consentPhone",
          "alias": "consentPhone",
          "visible": true,
          "required": false,
          "placeholder": "consentPhone",
          "value": "",
          "minLength": "1",
          "maxLength": "20",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "(8|\\+7|7)[0-9]{10}"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "consentCode_otp",
          "alias": "consentCode_otp",
          "visible": true,
          "required": false,
          "placeholder": "consentCode_otp",
          "value": "",
          "minLength": "1",
          "maxLength": "20",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^[.\\-\\d 0-9a-zA-Z]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "consentIp_address_otp",
          "alias": "consentIp_address_otp",
          "visible": true,
          "required": false,
          "placeholder": "consentIp_address_otp",
          "value": "",
          "minLength": "1",
          "maxLength": "20",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "consentCheck_time",
          "alias": "consentCheck_time",
          "visible": true,
          "required": false,
          "placeholder": "consentCheck_time",
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "currencyCode",
          "alias": "currencyCode",
          "visible": true,
          "required": true,
          "placeholder": "currencyCode",
          "value": "",
          "minLength": "3",
          "maxLength": "3",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^[a-zA-Z]+$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "branchUnitCode",
          "alias": "branchUnitCode",
          "visible": true,
          "required": true,
          "placeholder": "branchUnitCode",
          "value": "",
          "minLength": "1",
          "maxLength": "30",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^([а-яА-ЯёЁ0-9.,/\\_ ]+-+)*[а-яА-ЯёЁ0-9.,/\\_ ]+$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "BranchCodeDeliv",
          "alias": "BranchCodeDeliv",
          "visible": true,
          "required": false,
          "placeholder": "BranchCodeDeliv",
          "value": "",
          "minLength": "1",
          "maxLength": "30",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "courierTime",
          "alias": "courierTime",
          "visible": true,
          "required": false,
          "placeholder": "courierTime",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "kindGet",
          "alias": "kindGet",
          "visible": true,
          "required": true,
          "placeholder": "kindGet",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "subProgramCode",
          "alias": "subProgramCode",
          "visible": true,
          "required": true,
          "placeholder": "subProgramCode",
          "value": "",
          "minLength": "3",
          "maxLength": "4",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "promoCardCode",
          "alias": "promoCardCode",
          "visible": true,
          "required": false,
          "placeholder": "promoCardCode",
          "value": "",
          "minLength": "1",
          "maxLength": "3",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "faceit_id",
          "alias": "faceit_id",
          "visible": true,
          "required": false,
          "placeholder": "faceit_id",
          "value": "",
          "minLength": "1",
          "maxLength": "40",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^[.\\-\\d 0-9a-zA-Z]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "nickname",
          "alias": "nickname",
          "visible": true,
          "required": false,
          "placeholder": "nickname",
          "value": "",
          "minLength": "1",
          "maxLength": "20",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "gf_dog_num",
          "alias": "gf_dog_num",
          "visible": true,
          "required": false,
          "placeholder": "gf_dog_num",
          "value": "",
          "minLength": "1",
          "maxLength": "20",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "dateEntry",
          "type": "manual",
          "id": "gf_dog_date",
          "placeholder": "gf_dog_date",
          "required": false,
          "value": "",
          "validator": {
            "condition": "AND",
            "visible": false,
            "errors": [
              {
                "type": "validator",
                "message": "Параметр указан неверно"
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "controlInfo",
          "alias": "controlInfo",
          "visible": true,
          "required": false,
          "placeholder": "controlInfo",
          "value": "",
          "minLength": "1",
          "maxLength": "40",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^[а-яА-ЯёЁ0-9]+$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "privilegCardCode",
          "alias": "privilegCardCode",
          "visible": true,
          "required": false,
          "placeholder": "privilegCardCode",
          "value": "",
          "minLength": "1",
          "maxLength": "1",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^\\d*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "aflt_memberID",
          "alias": "aflt_memberID",
          "visible": true,
          "required": false,
          "placeholder": "aflt_memberID",
          "value": "",
          "minLength": "5",
          "maxLength": "10",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^[0-9]*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "aflt_name",
          "alias": "aflt_name",
          "visible": true,
          "required": false,
          "placeholder": "aflt_name",
          "value": "",
          "minLength": "1",
          "maxLength": "25",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^[A-Z ]+(-[A-Z]+)*$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        },
        {
          "component": "baseEntry",
          "type": "default",
          "id": "aflt_surname",
          "alias": "aflt_surname",
          "visible": true,
          "required": false,
          "placeholder": "aflt_surname",
          "value": "",
          "minLength": "1",
          "maxLength": "30",
          "validator": {
            "condition": "AND",
            "visible": false,
            "checks": [
              {
                "type": "regExp",
                "specific": {
                  "pattern": "^[A-Z\\-\\']+$"
                },
                "error": {
                  "type": "validator",
                  "message": "Параметр указан неверно"
                }
              }
            ]
          }
        }

      ]
    }
  ],
  "commands": [
    {
      "type": "execute",
      "id": "applyCard",
      "logInfo": "Подать заявку на ДК"
    }
  ]
}